version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - MYSQL_SERVER=db
      - MYSQL_USER=ragwebui
      - MYSQL_PASSWORD=ragwebui
      - MYSQL_DATABASE=ragwebui
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      # embeddings provider, if set to openai, use the openai api key and base url
      - EMBEDDINGS_PROVIDER=openai
      # remember to set the openai api key and base url
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - OPENAI_MODEL=gpt-4
      - CHROMA_DB_HOST=chromadb
      - CHROMA_DB_PORT=8000
      - VECTOR_STORE_TYPE=chroma
      # For Qdrant, Remove the comment and run the following command to start the service
      # - VECTOR_STORE_URL=http://localhost:6333
      # - VECTOR_STORE_PREFER_GRPC=true
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=documents
      - TZ=Asia/Shanghai
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    networks:
      - app_network
    depends_on:
      - db
      - chromadb
      - minio

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=
    networks:
      - app_network

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --host-cache-size=0 --mysqlx=OFF --ssl=0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ragwebui
      - MYSQL_USER=ragwebui
      - MYSQL_PASSWORD=ragwebui
      - TZ=Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - app_network

  # For Qdrant, Remove the comment and run the following command to start the service
  # qdrant:
  #   image: qdrant/qdrant:latest
  #   ports:
  #     - "6333:6333" # REST API
  #     - "6334:6334" # GRPC
  #   volumes:
  #     - qdrant_data:/qdrant/storage
  #   environment:
  #     - QDRANT_ALLOW_RECOVERY_MODE=true
  #   networks:
  #     - app_network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    networks:
      - app_network

volumes:
  mysql_data:
  chroma_data:
  minio_data:
  # qdrant_data:

networks:
  app_network:
    driver: bridge
